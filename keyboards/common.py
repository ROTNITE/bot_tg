# app/keyboards/common.py (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π ‚Äî –±–µ–∑ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä)
from __future__ import annotations

from typing import Optional, Iterable, Sequence

from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from app.config import CHANNEL_LINK, FACULTIES

# ============ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ============

def main_menu() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="üß≠ –†–µ–∂–∏–º—ã"))
    kb.add(KeyboardButton(text="üë§ –ê–Ω–∫–µ—Ç–∞"))
    kb.add(KeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
    return kb.as_markup(resize_keyboard=True)

def modes_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="üìá –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç"))
    kb.add(KeyboardButton(text="üïµÔ∏è –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç"))
    kb.add(KeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return kb.as_markup(resize_keyboard=True)

def subscription_kb() -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    b.button(text="‚û°Ô∏è –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=CHANNEL_LINK)
    b.button(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="sub_check")
    b.adjust(1)
    return b.as_markup()

def anon_chat_menu_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="üîé –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"))
    kb.add(KeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return kb.as_markup(resize_keyboard=True)

def cancel_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return kb.as_markup(resize_keyboard=True)

def rate_or_complain_kb(mid: int) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    for i in range(1, 6):
        b.button(text=str(i), callback_data=f"rate:{mid}:{i}")
    b.button(text="üö© –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", callback_data=f"complain:{mid}")
    b.adjust(5, 1)
    return b.as_markup()

def post_chat_rate_kb(mid: int) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    for i in range(1, 6):
        b.button(text=str(i), callback_data=f"rate:{mid}:{i}")
    b.button(text="üö© –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", callback_data=f"complain:{mid}")
    b.button(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"postfb:skip:{mid}")
    b.adjust(5, 1, 1)
    return b.as_markup()

def shop_kb(items: Iterable[Sequence]) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    any_items = False
    for (id_, name, price, type_, payload) in items:
        any_items = True
        b.button(text=f"{name} ‚Äî {price}üí∞", callback_data=f"shop_buy:{id_}")
    if not any_items:
        b.button(text="–ü–æ–∫–∞ –ø—É—Å—Ç–æ üòÖ", callback_data="noop")
    b.adjust(1)
    return b.as_markup()

def gender_self_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="–Ø –¥–µ–≤—É—à–∫–∞"))
    kb.add(KeyboardButton(text="–Ø –ø–∞—Ä–µ–Ω—å"))
    return kb.as_markup(resize_keyboard=True)

def seeking_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="–î–µ–≤—É—à–∫–∏"))
    kb.add(KeyboardButton(text="–ü–∞—Ä–Ω–∏"))
    kb.add(KeyboardButton(text="–ù–µ –≤–∞–∂–Ω–æ"))
    return kb.as_markup(resize_keyboard=True)

def faculties_kb() -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    for i, f in enumerate(FACULTIES):
        b.button(text=f, callback_data=f"fac:{i}")
    b.adjust(2)
    return b.as_markup()

def reveal_entry_menu() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    kb.add(KeyboardButton(text="‚úèÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å / –ü–µ—Ä–µ–∑–∞–ø–æ–ª–Ω–∏—Ç—å"))
    return kb.as_markup(resize_keyboard=True)

def about_kb(*, refill: bool = False, has_prev: bool = False) -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
    if refill and has_prev:
        kb.add(KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ"))
    kb.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return kb.as_markup(resize_keyboard=True)

def post_chat_actions_kb(mid: int) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    b.button(text="‚≠êÔ∏è –û—Ü–µ–Ω–∏—Ç—å", callback_data=f"postfb:rate:{mid}")
    b.button(text="üö© –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è", callback_data=f"postfb:complain:{mid}")
    b.button(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"postfb:skip:{mid}")
    b.adjust(2, 1)
    return b.as_markup()

def rate_stars_kb(mid: int) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    for i in range(1, 6):
        b.button(text=str(i), callback_data=f"rate:{mid}:{i}")
    b.button(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"postfb:back:{mid}")
    b.adjust(5, 1)
    return b.as_markup()

def photos_empty_kb(*, refill: bool = False, has_prev: bool = False) -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    if refill and has_prev:
        kb.add(KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ"))
    kb.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return kb.as_markup(resize_keyboard=True)

def photos_progress_kb() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.add(KeyboardButton(text="–ì–æ—Ç–æ–≤–æ"))
    kb.add(KeyboardButton(text="–°–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ç–æ"))
    kb.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return kb.as_markup(resize_keyboard=True)

def statuses_kb(inventory: list[str], current: Optional[str]) -> InlineKeyboardMarkup:
    b = InlineKeyboardBuilder()
    for t in inventory:
        mark = " ‚úÖ" if current and t == current else ""
        b.button(text=f"{t}{mark}", callback_data=f"use_status:{t}")
    if current:
        b.button(text="–°–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data="use_status:__none__")
    b.adjust(1)
    return b.as_markup()

def chat_hint() -> str:
    return (
        "–ö–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–µ:\n"
        "<code>!next</code> ‚Äî —Å–ª–µ–¥—É—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫\n"
        "<code>!stop</code> ‚Äî –∑–∞–∫–æ–Ω—á–∏—Ç—å\n"
        "<code>!reveal</code> ‚Äî –≤–∑–∞–∏–º–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ (–µ—Å–ª–∏ –∞–Ω–∫–µ—Ç—ã –µ—Å—Ç—å —É –æ–±–æ–∏—Ö)\n"
    )

__all__ = [
    "main_menu", "modes_kb", "subscription_kb", "anon_chat_menu_kb", "cancel_kb",
    "rate_or_complain_kb", "post_chat_rate_kb", "shop_kb",
    "gender_self_kb", "seeking_kb", "faculties_kb",
    "reveal_entry_menu", "about_kb",
    "post_chat_actions_kb", "rate_stars_kb",
    "photos_empty_kb", "photos_progress_kb",
    "statuses_kb", "chat_hint",
]
